<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Appearance8.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB5UlEQVQ4T6WSW0sbQRiG91YUFC1aKlLp
        0bRKQhJpjNFCYtmYhNamB4NWSm1LD//TCw/g3yhmQ0nCZnezO/N0ZmPS3aY3pRcvwwzzvN+83zcG8F8a
        PzQMKzy+lojL+vN+bKO2TR4/gG/v4Osh8ssB8nMD+fEt8sNrgod38A2jE2XG4e9HYJaQ2SwynUakUoi1
        NYJCjuDoBf37t3H03ZhBFD5swOUlsl5HJJOI1VWCahV5cYFfK+Pv7+LdXcK+NhkaDJ6sKmuYbhdaLYJa
        jaBSAUtF73SQZ2f0k4/ovyzSDdGIQZg3k0Hs7YXw0CSUhpVJf3sbd2EB7/lT2lED3WH5af93XvXkIRhK
        wd7WFu78PM7cHG618BeD4zeDvIkEQbkcM9DVvXweZ3aW3vQ0bjk3biDe1wlWVghMc5RZrxqm3UZeXeGo
        ydiTk7jP1vkZNVCzRagR+U/SyPPzQdVmE29zE3djI4SlMhEnJ/SWbuKUMnEDT/0wPV+/UcE3i4jT0xDW
        eXszMzi6uQp21lM4O1k6izdoGcaPkYGW+hyWnm//1Q5e4t4orz01hT0xgb2oGqgqtyNwzEBLfQ7LXr6F
        Vyvg7uZxzVyY1yllcYrpMVgrZqClumvpDg+ls2opUEuNJn4/tvl3YfwC55W4g7G9NzUAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAArEIbALREFwC2SBkAt1EfAL9XHQCcRCkAoUEjAKdJJACvWCYArVkuALlRIQC8ZSkAumgtALRv
        PwDJaSUAx2IuAMpkKADKbSsAynUzANN2MwDSdT4A3H88AJRYRgCZWUgAjWxeAJNhVQCgY0gApm5JAKty
        UwCOamkAknJyAJp9dwCffHYAl3p7AJx9fACgfXQA035BANSFPADfkDcA5Y8wAOCTOwC/glEApYN0ALuI
        dACxh3kAu5x+ANeAQwDWg0cA3oVCANuKQwDZhkgA3pRCAMaOWADOmVwA2ZBTAOucQADmnE0A5JZTAOKY
        VQDqmVQAyIdpANuUYADPk3YAzJV6AN6ecwDWmHgA2Zx7AOeUZQDpl2YA4p9iAN+lfwDromIA4qNoAOyn
        aQDprWoA5KRzAOuudQDipnsA6q98APG4cQA1ap4AHm2xAGdugwAJes4ACnzRAHyFlAA3pOEAMa30ADu8
        8gAysfgAWJjHAE+l3ABXptYAjYGMAJyGiACNi5sAooaFAKiMiwCulY8At5iBALeSjQCrk5MAr5iYALKX
        lACzmJEAspmZALKgnAC7o50Ajp2lAJeesQCin6oAuaSjAL6powC+qqkAypSDAMaYjQDNm44A156CAM6e
        kQDAo4EA26OFANejiQDGpJcAyKifANOmmgDTspsA46uBAOSrgwDgq4YA6auFAOKuiwDns4IA6beEAO+x
        igDzsokA4LCXAOe6lQDmvZkA6r2cAPi8lADNrKMAwa2rANatogDQr6YAzbCjAMmxrADYsKYA1bSrANKz
        rADWt6wA2rWrANy3qQDYtawAxbOyAMi2swDEubwAzLq5ANm5sQDcurAA3L62ANC+uwDYvrgA4bijAOK/
        rwDgv7YA78GJAOvDmgD5wJcA9MKdAPbImwD7y5wA3MS3AN7AuQDYwb0A3sO8AN3FvgDdy7sA5sCnAOfE
        qgDqya4A+MOgAPrJpAD2yqoA+s2sAP3SrAD+2a0A4sKxAOHBtgDgwbkA4ca5AOHDvADixb4A58m5AOXJ
        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
        P////H////5////+f///////
</value>
  </data>
</root>