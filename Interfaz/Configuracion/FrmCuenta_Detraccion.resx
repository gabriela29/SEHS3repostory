<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="UltraPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2XWm7wMAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="ToolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="tsCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACkSURBVDhPlZALDsMwCEM5OkfLzbIaMGH5dJkligL2a1o5
        qP9RW3VVXYpzqLV2D+CZQVU/Y27uIg4OQQAJXz+hDsyEDtVQ7dib+1GH1fpUDljD6OF5HgjvKgHvN+iC
        A0O1EvB+A8ghPvgqB4j9xPlHhidVB2lwwICfbkBxMAFGqHbszb1RGhywhtGxN/dGXAbgGD4CqACMMGZR
        VwrA/Rtn/QiKfADckGXYsnwKqAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAImUmACVqKgAobi0AKXAuACx0MgAweTUANH86AEtxOAA+e0MAS4FPAE2HUgBQllcAUZlXAFKY
        WQBVnF0AZ5FOAGWTWgBRqFsAcqBbAF+eYQBglmIAYJZkAG2abwBaoGIAXKNkAF6lZgBWrmAAWbJjAFy2
        ZgBfu2oAYahpAGerbgBiv24AbqlxAHurdwB5oXsAarJzAG62dwB0sHoAdL19AHu6fABzxH0Aw4VTAMWF
        VADJiVoAyYxdAM6RYgDRlWcA0ZZpANSabgDUnHMA16B0ANihdgDZo3kA3KV8AN2ofwB4wYEAecSCAH7J
        hgCBt4UA36mBAN+zkQDgq4MA4a2GAOOwiwDksYsA5bOOAOa0jwDntpIA4bWUAOm5lgDru5kA67yaAOu9
        nADsvp0AgcSIAIDIiwCCyIwAhsmNAIPPjACKz48AhsqQAInLkgCNzpYAnc+XAJPSmwCT0JwAl9OgAJvV
        pACe1aYAotWnAKHWqQCl2K0AqdmwALjfuwDpwqUA78SnAOjDqADpxaoA6smuAPDGqwDqy7EA6syyAOrO
        tgDr0LkA69K9AO/TvADN6M8A0+DCANnx3ADz49cA8+XZAPTm2QDz594A9uneAPTq4gD17uYA9e/pAPfw
        6gD58eoA+PLtAPn18QD79/QA////AO//sQD2/9EA////AAAAAAAvJgAAUEEAAHBbAACQdAAAsI4AAM+p
        AADwwwAA/9IRAP/YMQD/3VEA/+RxAP/qkQD/8LEA//bRAP///wAAAAAALxQAAFAiAABwMAAAkD4AALBN
        AADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8DAABQBAAAcAYAAJAJ
        AACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAAAAAvAA4AUAAXAHAA
        IQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP///wAAAAAALwAgAFAA
        NgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R8AD///8AAAAAACwA
        LwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx/wD70f8A////AAAA
        AAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AAAAAAAAAAAAAFwAAAAAAAAAAAAAAAAAAFgsAAAAAAAA+MzAvLi0sEQ8OBAIBCAAANHl3dXRy
        DRpUU1JOTRoKADZ5anxqfHwnHxkHBgxOGCQ4eWlpaXF1eCIUcXEVBQMJPXlofGl8fHx5PHx8dy4AAEB6
        Zmdnc3h4cHFvI3YrAABBemR8ZCodHCl8fCAiLAAAQ3pjY2NVVF46GxImJRAAAEV7YHxiblBWXl1dXFol
        GgBHe2BgYGttUSEeHTkoEwAASXt8fHx8fHx8fHw6TDEAAEt7WVhXVFNPW19sO3oyAABhe3t7e3t7e3t7
        e3t7NQAAAGVLSkhHRURCQD84N0YAAP+/AAD/PwAAAAMAAAABAAAAAAAAAAAAAAADAAAAAwAAAAMAAAAD
        AAAAAQAAAAMAAAADAAAAAwAAAAMAAIADAAA=
</value>
  </data>
</root>