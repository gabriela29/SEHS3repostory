<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="UltraPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="picAjax.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhEAAQAPQAAP///wCA//j7/jib/oTB/gaC/iaS/tbq/qjT/haK/na6/may/uTx/pjL/sbi/kij
        /laq/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBF
        Mi4wAwEAAAAh/hpDcmVhdGVkIHdpdGggYWpheGxvYWQuaW5mbwAh+QQJCgAAACwAAAAAEAAQAAAFUCAg
        jmRpnqUwFGwhKoRgqq2YFMaRGjWA8AbZiIBbjQQ8AmmFUJEQhQGJhaKOrCksgEla+KIkYvC6SJKQOISo
        NSYdeIk1ayA8ExTyeR3F749CACH5BAkKAAAALAAAAAAQABAAAAVoICCKR9KMaCoaxeCoqEAkRX3AwMHW
        xQIIjJSAZWgUEgzBwCBAEQpMwIDwY1FHgwJCtOW2UDWYIDyqNVVkUbYr6CK+o2eUMKgWrqKhj0FrEM8j
        QQALPFA3MAc8CQSAMA5ZBjgqDQmHIyEAIfkECQoAAAAsAAAAABAAEAAABWAgII4j85Ao2hRIKgrEUBQJ
        LaSHMe8zgQo6Q8sxS7RIhILhBkgumCTZsXkACBC+0cwF2GoLLoFXREDcDlkAojBICRaFLDCOQtQKjmsQ
        SubtDFU/NXcDBHwkaw1cKQ8MiyEAIfkECQoAAAAsAAAAABAAEAAABVIgII5kaZ6AIJQCMRTFQKiDQx4G
        rBfGa4uCnAEhQuRgPwCBtwK+kCNFgjh6QlFYgGO7baJ2CxIioSDpwqNggWCGDVVGphly3BkOpXDrKfNm
        /4AhACH5BAkKAAAALAAAAAAQABAAAAVgICCOZGmeqEAMRTEQwskYbV0Yx7kYSIzQhtgoBxCKBDQCIOco
        LBimRiFhSABYU5gIgW01pLUBYkRItAYAqrlhYiwKjiWAcDMWY8QjsCf4DewiBzQ2N1AmKlgvgCiMjSQh
        ACH5BAkKAAAALAAAAAAQABAAAAVfICCOZGmeqEgUxUAIpkA0AMKyxkEiSZEIsJqhYAg+boUFSTAkiBiN
        Hks3sg1ILAfBiS10gyqCg0UaFBCkwy3RYKiIYMAC+RAxiQgYsJdAjw5DN2gILzEEZgVcKYuMJiEAOwAA
        AAAAAAAAAA==
</value>
  </data>
  <data name="Appearance2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAACYUlEQVQ4T6WT70tTURjH77/Q2+hVLyKQ
        6i8I+gGREZSkIEn6YiaBS8thtisFIqJiho2ZbWlJrmI2hFVaQjNtK9uU1Plj2jY1bfc6nHe7271ba41v
        59ytH+or68CH55zD8/2eh+ecwwD4L5i8q+byVqtfqn3qA/uEYPoM7aN5XOueRfWDGWi63KgyTuCK4RMq
        745BrXeCNTokqlMMGiz+tG5wDTulsm0krRjQk/+FspZhoicGrMmLeDy+Y1SNtoyBtmcBsixDUpAgSQQy
        t9vt2xi36TH/uBBeawMmu05gqj2nmKENi0ajKKx3/yZG1lTw95A5K/ihGkTcL4FYAGG3BaO3Tq4xtNsR
        UYQYIYiRbBQ3GchcP4S5OiRXn4MfbkF8ug8/lh2YfliWYOhVCUIY4XBYiQphgUSB7AlYXyTimRtIxx2I
        +9XYcF2Gp0cFp0EFly5vH6PpnEIoFMJ6FjoPrYeUCly2dgjTWqQTo5B9JUisFCE6x2K5+ywqbnbS4him
        smMcwWBwUw/o+m1fM/ixmqy4GIkv5yHO1GLReBq8x4H8akvGoELvAs/zhLVs5OH5YMLc62pS9jskllT4
        tnIBEVKJz3AK30VOyTmn6c0YqHUfEQhwhAA4grO/A7MDLKZeteGrswDyUhE2Jq/De/8MVhcmwHE0j0Ne
        lTljQN60+dJtu/KySpuG0Nt8HIguY96YjyF2N97fy8VA3RGUaw2k7GfkZDOIhkIdmG2/q/5iTio5qkfS
        eQfOhqPoLd0TG9QePLQ17xfbNgoO70o0luxP2ZpyU29aj428qDmwd2vOH8D8BD39IYTgy29CAAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYAAAAAAHMkAACUMAAAvTwAAJRh
        AAC9eQAA3kkAAP9VAAD/VSEA/3FKAP+qIQD/ukoA/45rAP/HawD/qowA8MqmAP/HtQD/19YA/+PWAPf3
        9wCUlpwAnJ6cAKWmpQCtrq0Avb69AOe2lADAwMAAxsfGAM7PzgDv7+8A9/f3AP///wD3370A58/OAOff
        xgDn184A99/GAPfnxgD3584A9+fWAP/v1gD/794A/+/nAP/35wD/9+8A//f3AP//9wD///8Avff/AM7v
        9wDG9/8Azv//AN7//wC1rr0Atba1AL2+vQCEptYAjKbWAISm3gCMrt4Apb7eAJS25wC9tu8AvcfGAK3H
        5wDAwMAAzs/OANbX1gDe394A3ufeAOfn3gDn5+cA7+/vAPf39wCE7/8AjO//AJTv/wCM9/8AlPf/AJz3
        /wCU//8Ape/3AK3v9wCl9/8Arf//AEK23gBCrucAQrbnAEK+7wBKvu8AY77nAGPH1gBSx+8AUsf3AGvH
        5wBrx+8AjI6MALWmjAClpqUAxracAJTnpQDOz84A1tfWAN7f3gDv7+8A9/f3AP//zgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkoKAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP//
        /wBLVaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASFhIQDAwAAAAAExIMCwsAFBwSEAwM
        AAAAABwWDAsLABQVEhAMDAAAAAATEgwLCwAUEhIQDAwLABQUEhAMCwsAFBMaEAwLCwsUGxIQDAsLABQT
        GhAMCxULFBwSEAwLCwAVFQkQDAsVCxQaEhAMDA4AABUUEg0LDAwUFRIQDA4AAAAAFRYQDAwAFRgSEAwA
        AAAAABgUEQ0MABgUEhAMAAAAAAAUFxENAAAAFBIQDAAAAAAAFBwRDQAAABQcEAwAAAAAAAkXFRQAAAAV
        Dw8MAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAAA8EAAAPBAAADwQAAAQEAAAABAAAAAQAAAAEAAIAD
        AADBBwAAwQcAAMOHAADDhwAAw4cAAP//AAA=
</value>
  </data>
</root>