<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAv1oKAL5bDAC/XAwAvFsRALtdFAC8YhwAu2UeAL9pHgC/ZSAAvWYkAL9pJADCWQoAwlgMAMFd
        DQDMXRIAzF8VAMJnFADOYBUAyG0TAMhpFQDKbxUAwGIZAMRqHADeah4AzncbAMpzHwDLdh8Az3YeAM94
        HADUfRYA0XoZAMFmIADBbSQA0W4iAMl0JADPfiAAzXgkAM5+KADRfSMA03cqAN9zLQDQfioAznM2AMp5
        OADiaiAA5W0iAORvJADjcScA5XApAOt3LwD1disA5X03APV5MwDzfjcA/X0zAP9+NgDHf0gA1YAXANiB
        GQDRgSAA2IUkANKBKwDYhikA1oI1ANGEPQDZjD0A4oI6AOWDPwDsgj0A84E5APODPQDzhT8A/oI5AP6C
        PQD+hj8Ax4BIAMuDSADLhEgA35ZDAN6YRQDVkUgA2JVIAMGDVwDAhVcAxYlXAMuPUwDPi1UAzoxZANOP
        XQDMkFcA0ZVTANaTVQDalVIA2pdVANKYVwD+hkAA/olCAP6KRgD+jEcA/opJAP6NSQD/ikwA/o5NAOaS
        TgDqk08A/pBLAP6RTQD+jlAA7JNeAOqcWgD+kFIA/pVRAP6RVQD9lVUA/phTAP6YVQD0l14A/pNZAP6V
        WgD+l14A9ppZAP6ZWQD+nFoA/ppdAP6eXQDjoVUA/qBfANSWYgDXnGkA2p9oAP6ZYQD+nmMA/pxmAP6e
        aQDmoGAA/aFhAP6iZQD+pGYA/qFqAP2maQD+om0A/qZtAP2oagD/qm0A6rFpAP6jcAD+pXIA/qpwAP+t
        cQD9qXQA9KR5AP6qeQD9rXoA/ap9AP6tfQDrtXEA7715AP+wcgD/sXUA+LN4AP6yeQD/tHkA/rF9APK+
        fwD/uHoA/7l+AO+/gADrvIkA/rKAAP60ggD+toUA/7qBAP+8ggD/uoUA/72FAP26igDjs5AA67yRAOe+
        mwDzuZcA/buSAP69kQD9v5cA/8CFAP/BiQD/wowA/8SOAP/IjgD+xJMA98uVAP/LkgD/yZUA/sGYAP/E
        mgD+wZ0A/sSfAP/NmwD905sA58OnAOvIpgDqyK8A88KlAP3EogD/zqEA8c2pAP7JqwD+zaoA/cyuAP/U
        owD+26QA/9aqAP/aqgDrzrUA/s2xAPHUsQD+1LQA/920AP3SuAD+1LkA/9e8APfavQD/2bgA/925AP/Z
        vwD+3b4A/+CqAP/ltgD/5b8A993CAP7cwwD+3swA/+LDAP/gywD/5MkA/+HNAPnlzgD/584A/+jLAPfk
        1AD/5NIA/+rUAP/m2QD36NoA/uvbAP/w0wD+8d0A/u7jAP/x5AD/9OsA//jvAP/28QD/+PQA/v38ANrR
        /wD///8AAAAAAAAAAAAAAAAATQgOAwIBBzkAAAAAAAAAAAAAAAAAAAAAAAAAAABVESI0RUhHRjYyMBIF
        VAAAAAAAAAAAAAAAAAAAAABcFEN6e3x8fHp6cmdjSTcYDVgAAAAAAAAAAAAAAAAAIyh5ipaZo5upm5uY
        k42DcUozDwoAAAAAAAAAAAAAABNplamrqqmjmZiYlpOSjYuGhXdKLgQAAAAAAAAAAAAVaKyrq6qjo5mY
        lI6Li4uGhYSDeHZmLQQAAAAAAAAAJW6vrqqjoZSMf3t6c3BrampnbG9vb2xkMQoAAAAAAF5Ar62mopWQ
        jIqIf3t6c3Nra2NiYWFiZGJgEFcAAAAAHKCtrKKfnpWQj4qJjn96dHNwa2VjYUtJSUo1DAAAAFaHuKys
        pqKfnpCQjI/PwXt6c3Bra2NjYWBJSTgpUwAAGeHAuLmtpqKfnpWPwtvbt32ZfXBwa2VjYWBJSZoGAABd
        7eG7urimoqKfnpXP3NzQj9aWc3Nra2NjYWBJdisAUbLx7di7uq2mpaKfruDg4OC3y7Z0dHNwa2VjYUtJ
        L0wmzfHx6MW6uKamoqKi2Ofm5tuPlHt7c3Nra2NiYINtCyrd9PTx0b+5r62mpa/m6+np2IiJf317dHNw
        anLWy5cJKuXx39PFwLq4raalzPDw6+vnsIqIf3t6c3B6y8vQyiAq3dnF0czFvLnM3szp8fHw8PDwsIqJ
        f4mwdInOw3y0Fie+xsXR0cW80fH29PT08vLy8ubBj4x/xMR0e9bahHUgJ6TRxtPT0b/q+Pj49/f29/fy
        6fDBoarn2oq18OubRSFSnNLR1NPRzPT5+Pj4+Pj4+PT4+PK22vT05vDy8utETgBP0tHU1N/f6Pn5+fn5
        +fn5+fn5+PT5+Pj49PT091kAAB7S0tTZ6ujf9Pz6+vr5+Pn6+fn5+fn5+fn39/f0FwAAX5Hi0uTx7ejq
        +vz58er4+fz8/Pz8+/v7+/n4+bFVAAAAP8bS7vXx7fT9/Pj8+vz8/Pz8/Pz8/Pz8+/nvLAAAAAB+UOLk
        9vb08fj8/f39/f39/f39/Pz8/Pz8/IBcAAAAAAA9neP4+Pj0+f39/f39/f39/f39/f39/f3JIwAAAAAA
        AAA7nPX5+fn9+vz9/f39/f39/f39/f3/xxoAAAAAAAAAAAA7p/b6+vr6/P39/f///f39/f3//9UbAAAA
        AAAAAAAAAAA9T+z9/Pz9//////3///////eBJQAAAAAAAAAAAAAAAAB+Qqj2/f////////////2zQV4A
        AAAAAAAAAAAAAAAAAAAAWzpQqNfv893dzciCHVoAAAAAAAAAAAAAAAAAAAAAAAAAAABSPD4+Hx8kUQAA
        AAAAAAAAAAAAAP/wD///gAH//gAAf/wAAD/4AAAf8AAAD+AAAAfAAAADwAAAA4AAAAGAAAABgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAYAAAAGAAAABwAAAA8AAAAPgAAAH8AAAD/gA
        AB/8AAA//gAAf/+AAf//8A//
</value>
  </data>
</root>